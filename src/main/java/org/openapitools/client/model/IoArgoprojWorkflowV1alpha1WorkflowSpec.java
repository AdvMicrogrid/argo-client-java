/*
 * Argo
 * Argo
 *
 * The version of the OpenAPI document: v2.10.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Arguments;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1ExecutorConfig;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Metrics;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1PodGC;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Synchronization;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1TTLStrategy;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Template;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1WorkflowTemplateRef;
import org.openapitools.client.model.IoK8sApiCoreV1Affinity;
import org.openapitools.client.model.IoK8sApiCoreV1HostAlias;
import org.openapitools.client.model.IoK8sApiCoreV1LocalObjectReference;
import org.openapitools.client.model.IoK8sApiCoreV1PersistentVolumeClaim;
import org.openapitools.client.model.IoK8sApiCoreV1PodDNSConfig;
import org.openapitools.client.model.IoK8sApiCoreV1PodSecurityContext;
import org.openapitools.client.model.IoK8sApiCoreV1Toleration;
import org.openapitools.client.model.IoK8sApiCoreV1Volume;
import org.openapitools.client.model.IoK8sApiPolicyV1beta1PodDisruptionBudgetSpec;

/**
 * WorkflowSpec is the specification of a Workflow.
 */
@ApiModel(description = "WorkflowSpec is the specification of a Workflow.")

public class IoArgoprojWorkflowV1alpha1WorkflowSpec {
  public static final String SERIALIZED_NAME_ACTIVE_DEADLINE_SECONDS = "activeDeadlineSeconds";
  @SerializedName(SERIALIZED_NAME_ACTIVE_DEADLINE_SECONDS)
  private Long activeDeadlineSeconds;

  public static final String SERIALIZED_NAME_AFFINITY = "affinity";
  @SerializedName(SERIALIZED_NAME_AFFINITY)
  private IoK8sApiCoreV1Affinity affinity;

  public static final String SERIALIZED_NAME_ARGUMENTS = "arguments";
  @SerializedName(SERIALIZED_NAME_ARGUMENTS)
  private IoArgoprojWorkflowV1alpha1Arguments arguments;

  public static final String SERIALIZED_NAME_ARTIFACT_REPOSITORY_REF = "artifactRepositoryRef";
  @SerializedName(SERIALIZED_NAME_ARTIFACT_REPOSITORY_REF)
  private IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef artifactRepositoryRef;

  public static final String SERIALIZED_NAME_AUTOMOUNT_SERVICE_ACCOUNT_TOKEN = "automountServiceAccountToken";
  @SerializedName(SERIALIZED_NAME_AUTOMOUNT_SERVICE_ACCOUNT_TOKEN)
  private Boolean automountServiceAccountToken;

  public static final String SERIALIZED_NAME_DNS_CONFIG = "dnsConfig";
  @SerializedName(SERIALIZED_NAME_DNS_CONFIG)
  private IoK8sApiCoreV1PodDNSConfig dnsConfig;

  public static final String SERIALIZED_NAME_DNS_POLICY = "dnsPolicy";
  @SerializedName(SERIALIZED_NAME_DNS_POLICY)
  private String dnsPolicy;

  public static final String SERIALIZED_NAME_ENTRYPOINT = "entrypoint";
  @SerializedName(SERIALIZED_NAME_ENTRYPOINT)
  private String entrypoint;

  public static final String SERIALIZED_NAME_EXECUTOR = "executor";
  @SerializedName(SERIALIZED_NAME_EXECUTOR)
  private IoArgoprojWorkflowV1alpha1ExecutorConfig executor;

  public static final String SERIALIZED_NAME_HOST_ALIASES = "hostAliases";
  @SerializedName(SERIALIZED_NAME_HOST_ALIASES)
  private List<IoK8sApiCoreV1HostAlias> hostAliases = null;

  public static final String SERIALIZED_NAME_HOST_NETWORK = "hostNetwork";
  @SerializedName(SERIALIZED_NAME_HOST_NETWORK)
  private Boolean hostNetwork;

  public static final String SERIALIZED_NAME_IMAGE_PULL_SECRETS = "imagePullSecrets";
  @SerializedName(SERIALIZED_NAME_IMAGE_PULL_SECRETS)
  private List<IoK8sApiCoreV1LocalObjectReference> imagePullSecrets = null;

  public static final String SERIALIZED_NAME_METRICS = "metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private IoArgoprojWorkflowV1alpha1Metrics metrics;

  public static final String SERIALIZED_NAME_NODE_SELECTOR = "nodeSelector";
  @SerializedName(SERIALIZED_NAME_NODE_SELECTOR)
  private Map<String, String> nodeSelector = null;

  public static final String SERIALIZED_NAME_ON_EXIT = "onExit";
  @SerializedName(SERIALIZED_NAME_ON_EXIT)
  private String onExit;

  public static final String SERIALIZED_NAME_PARALLELISM = "parallelism";
  @SerializedName(SERIALIZED_NAME_PARALLELISM)
  private Long parallelism;

  public static final String SERIALIZED_NAME_POD_DISRUPTION_BUDGET = "podDisruptionBudget";
  @SerializedName(SERIALIZED_NAME_POD_DISRUPTION_BUDGET)
  private IoK8sApiPolicyV1beta1PodDisruptionBudgetSpec podDisruptionBudget;

  public static final String SERIALIZED_NAME_POD_G_C = "podGC";
  @SerializedName(SERIALIZED_NAME_POD_G_C)
  private IoArgoprojWorkflowV1alpha1PodGC podGC;

  public static final String SERIALIZED_NAME_POD_PRIORITY = "podPriority";
  @SerializedName(SERIALIZED_NAME_POD_PRIORITY)
  private Integer podPriority;

  public static final String SERIALIZED_NAME_POD_PRIORITY_CLASS_NAME = "podPriorityClassName";
  @SerializedName(SERIALIZED_NAME_POD_PRIORITY_CLASS_NAME)
  private String podPriorityClassName;

  public static final String SERIALIZED_NAME_POD_SPEC_PATCH = "podSpecPatch";
  @SerializedName(SERIALIZED_NAME_POD_SPEC_PATCH)
  private String podSpecPatch;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_SCHEDULER_NAME = "schedulerName";
  @SerializedName(SERIALIZED_NAME_SCHEDULER_NAME)
  private String schedulerName;

  public static final String SERIALIZED_NAME_SECURITY_CONTEXT = "securityContext";
  @SerializedName(SERIALIZED_NAME_SECURITY_CONTEXT)
  private IoK8sApiCoreV1PodSecurityContext securityContext;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT_NAME = "serviceAccountName";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT_NAME)
  private String serviceAccountName;

  public static final String SERIALIZED_NAME_SHUTDOWN = "shutdown";
  @SerializedName(SERIALIZED_NAME_SHUTDOWN)
  private String shutdown;

  public static final String SERIALIZED_NAME_SUSPEND = "suspend";
  @SerializedName(SERIALIZED_NAME_SUSPEND)
  private Boolean suspend;

  public static final String SERIALIZED_NAME_SYNCHRONIZATION = "synchronization";
  @SerializedName(SERIALIZED_NAME_SYNCHRONIZATION)
  private IoArgoprojWorkflowV1alpha1Synchronization synchronization;

  public static final String SERIALIZED_NAME_TEMPLATES = "templates";
  @SerializedName(SERIALIZED_NAME_TEMPLATES)
  private List<IoArgoprojWorkflowV1alpha1Template> templates = null;

  public static final String SERIALIZED_NAME_TOLERATIONS = "tolerations";
  @SerializedName(SERIALIZED_NAME_TOLERATIONS)
  private List<IoK8sApiCoreV1Toleration> tolerations = null;

  public static final String SERIALIZED_NAME_TTL_SECONDS_AFTER_FINISHED = "ttlSecondsAfterFinished";
  @SerializedName(SERIALIZED_NAME_TTL_SECONDS_AFTER_FINISHED)
  private Integer ttlSecondsAfterFinished;

  public static final String SERIALIZED_NAME_TTL_STRATEGY = "ttlStrategy";
  @SerializedName(SERIALIZED_NAME_TTL_STRATEGY)
  private IoArgoprojWorkflowV1alpha1TTLStrategy ttlStrategy;

  public static final String SERIALIZED_NAME_VOLUME_CLAIM_TEMPLATES = "volumeClaimTemplates";
  @SerializedName(SERIALIZED_NAME_VOLUME_CLAIM_TEMPLATES)
  private List<IoK8sApiCoreV1PersistentVolumeClaim> volumeClaimTemplates = null;

  public static final String SERIALIZED_NAME_VOLUMES = "volumes";
  @SerializedName(SERIALIZED_NAME_VOLUMES)
  private List<IoK8sApiCoreV1Volume> volumes = null;

  public static final String SERIALIZED_NAME_WORKFLOW_TEMPLATE_REF = "workflowTemplateRef";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_TEMPLATE_REF)
  private IoArgoprojWorkflowV1alpha1WorkflowTemplateRef workflowTemplateRef;


  public IoArgoprojWorkflowV1alpha1WorkflowSpec activeDeadlineSeconds(Long activeDeadlineSeconds) {
    
    this.activeDeadlineSeconds = activeDeadlineSeconds;
    return this;
  }

   /**
   * Optional duration in seconds relative to the workflow start time which the workflow is allowed to run before the controller terminates the io.argoproj.workflow.v1alpha1. A value of zero is used to terminate a Running workflow
   * @return activeDeadlineSeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional duration in seconds relative to the workflow start time which the workflow is allowed to run before the controller terminates the io.argoproj.workflow.v1alpha1. A value of zero is used to terminate a Running workflow")

  public Long getActiveDeadlineSeconds() {
    return activeDeadlineSeconds;
  }


  public void setActiveDeadlineSeconds(Long activeDeadlineSeconds) {
    this.activeDeadlineSeconds = activeDeadlineSeconds;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec affinity(IoK8sApiCoreV1Affinity affinity) {
    
    this.affinity = affinity;
    return this;
  }

   /**
   * Get affinity
   * @return affinity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoK8sApiCoreV1Affinity getAffinity() {
    return affinity;
  }


  public void setAffinity(IoK8sApiCoreV1Affinity affinity) {
    this.affinity = affinity;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec arguments(IoArgoprojWorkflowV1alpha1Arguments arguments) {
    
    this.arguments = arguments;
    return this;
  }

   /**
   * Get arguments
   * @return arguments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojWorkflowV1alpha1Arguments getArguments() {
    return arguments;
  }


  public void setArguments(IoArgoprojWorkflowV1alpha1Arguments arguments) {
    this.arguments = arguments;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec artifactRepositoryRef(IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef artifactRepositoryRef) {
    
    this.artifactRepositoryRef = artifactRepositoryRef;
    return this;
  }

   /**
   * Get artifactRepositoryRef
   * @return artifactRepositoryRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef getArtifactRepositoryRef() {
    return artifactRepositoryRef;
  }


  public void setArtifactRepositoryRef(IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef artifactRepositoryRef) {
    this.artifactRepositoryRef = artifactRepositoryRef;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec automountServiceAccountToken(Boolean automountServiceAccountToken) {
    
    this.automountServiceAccountToken = automountServiceAccountToken;
    return this;
  }

   /**
   * AutomountServiceAccountToken indicates whether a service account token should be automatically mounted in pods. ServiceAccountName of ExecutorConfig must be specified if this value is false.
   * @return automountServiceAccountToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted in pods. ServiceAccountName of ExecutorConfig must be specified if this value is false.")

  public Boolean getAutomountServiceAccountToken() {
    return automountServiceAccountToken;
  }


  public void setAutomountServiceAccountToken(Boolean automountServiceAccountToken) {
    this.automountServiceAccountToken = automountServiceAccountToken;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec dnsConfig(IoK8sApiCoreV1PodDNSConfig dnsConfig) {
    
    this.dnsConfig = dnsConfig;
    return this;
  }

   /**
   * Get dnsConfig
   * @return dnsConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoK8sApiCoreV1PodDNSConfig getDnsConfig() {
    return dnsConfig;
  }


  public void setDnsConfig(IoK8sApiCoreV1PodDNSConfig dnsConfig) {
    this.dnsConfig = dnsConfig;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec dnsPolicy(String dnsPolicy) {
    
    this.dnsPolicy = dnsPolicy;
    return this;
  }

   /**
   * Set DNS policy for the pod. Defaults to \&quot;ClusterFirst\&quot;. Valid values are &#39;ClusterFirstWithHostNet&#39;, &#39;ClusterFirst&#39;, &#39;Default&#39; or &#39;None&#39;. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to &#39;ClusterFirstWithHostNet&#39;.
   * @return dnsPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.")

  public String getDnsPolicy() {
    return dnsPolicy;
  }


  public void setDnsPolicy(String dnsPolicy) {
    this.dnsPolicy = dnsPolicy;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec entrypoint(String entrypoint) {
    
    this.entrypoint = entrypoint;
    return this;
  }

   /**
   * Entrypoint is a template reference to the starting point of the io.argoproj.workflow.v1alpha1.
   * @return entrypoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Entrypoint is a template reference to the starting point of the io.argoproj.workflow.v1alpha1.")

  public String getEntrypoint() {
    return entrypoint;
  }


  public void setEntrypoint(String entrypoint) {
    this.entrypoint = entrypoint;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec executor(IoArgoprojWorkflowV1alpha1ExecutorConfig executor) {
    
    this.executor = executor;
    return this;
  }

   /**
   * Get executor
   * @return executor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojWorkflowV1alpha1ExecutorConfig getExecutor() {
    return executor;
  }


  public void setExecutor(IoArgoprojWorkflowV1alpha1ExecutorConfig executor) {
    this.executor = executor;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec hostAliases(List<IoK8sApiCoreV1HostAlias> hostAliases) {
    
    this.hostAliases = hostAliases;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowSpec addHostAliasesItem(IoK8sApiCoreV1HostAlias hostAliasesItem) {
    if (this.hostAliases == null) {
      this.hostAliases = new ArrayList<IoK8sApiCoreV1HostAlias>();
    }
    this.hostAliases.add(hostAliasesItem);
    return this;
  }

   /**
   * Get hostAliases
   * @return hostAliases
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<IoK8sApiCoreV1HostAlias> getHostAliases() {
    return hostAliases;
  }


  public void setHostAliases(List<IoK8sApiCoreV1HostAlias> hostAliases) {
    this.hostAliases = hostAliases;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec hostNetwork(Boolean hostNetwork) {
    
    this.hostNetwork = hostNetwork;
    return this;
  }

   /**
   * Host networking requested for this workflow pod. Default to false.
   * @return hostNetwork
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Host networking requested for this workflow pod. Default to false.")

  public Boolean getHostNetwork() {
    return hostNetwork;
  }


  public void setHostNetwork(Boolean hostNetwork) {
    this.hostNetwork = hostNetwork;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec imagePullSecrets(List<IoK8sApiCoreV1LocalObjectReference> imagePullSecrets) {
    
    this.imagePullSecrets = imagePullSecrets;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowSpec addImagePullSecretsItem(IoK8sApiCoreV1LocalObjectReference imagePullSecretsItem) {
    if (this.imagePullSecrets == null) {
      this.imagePullSecrets = new ArrayList<IoK8sApiCoreV1LocalObjectReference>();
    }
    this.imagePullSecrets.add(imagePullSecretsItem);
    return this;
  }

   /**
   * ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
   * @return imagePullSecrets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod")

  public List<IoK8sApiCoreV1LocalObjectReference> getImagePullSecrets() {
    return imagePullSecrets;
  }


  public void setImagePullSecrets(List<IoK8sApiCoreV1LocalObjectReference> imagePullSecrets) {
    this.imagePullSecrets = imagePullSecrets;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec metrics(IoArgoprojWorkflowV1alpha1Metrics metrics) {
    
    this.metrics = metrics;
    return this;
  }

   /**
   * Get metrics
   * @return metrics
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojWorkflowV1alpha1Metrics getMetrics() {
    return metrics;
  }


  public void setMetrics(IoArgoprojWorkflowV1alpha1Metrics metrics) {
    this.metrics = metrics;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec nodeSelector(Map<String, String> nodeSelector) {
    
    this.nodeSelector = nodeSelector;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowSpec putNodeSelectorItem(String key, String nodeSelectorItem) {
    if (this.nodeSelector == null) {
      this.nodeSelector = new HashMap<String, String>();
    }
    this.nodeSelector.put(key, nodeSelectorItem);
    return this;
  }

   /**
   * NodeSelector is a selector which will result in all pods of the workflow to be scheduled on the selected node(s). This is able to be overridden by a nodeSelector specified in the template.
   * @return nodeSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "NodeSelector is a selector which will result in all pods of the workflow to be scheduled on the selected node(s). This is able to be overridden by a nodeSelector specified in the template.")

  public Map<String, String> getNodeSelector() {
    return nodeSelector;
  }


  public void setNodeSelector(Map<String, String> nodeSelector) {
    this.nodeSelector = nodeSelector;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec onExit(String onExit) {
    
    this.onExit = onExit;
    return this;
  }

   /**
   * OnExit is a template reference which is invoked at the end of the workflow, irrespective of the success, failure, or error of the primary io.argoproj.workflow.v1alpha1.
   * @return onExit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "OnExit is a template reference which is invoked at the end of the workflow, irrespective of the success, failure, or error of the primary io.argoproj.workflow.v1alpha1.")

  public String getOnExit() {
    return onExit;
  }


  public void setOnExit(String onExit) {
    this.onExit = onExit;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec parallelism(Long parallelism) {
    
    this.parallelism = parallelism;
    return this;
  }

   /**
   * Parallelism limits the max total parallel pods that can execute at the same time in a workflow
   * @return parallelism
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Parallelism limits the max total parallel pods that can execute at the same time in a workflow")

  public Long getParallelism() {
    return parallelism;
  }


  public void setParallelism(Long parallelism) {
    this.parallelism = parallelism;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec podDisruptionBudget(IoK8sApiPolicyV1beta1PodDisruptionBudgetSpec podDisruptionBudget) {
    
    this.podDisruptionBudget = podDisruptionBudget;
    return this;
  }

   /**
   * Get podDisruptionBudget
   * @return podDisruptionBudget
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoK8sApiPolicyV1beta1PodDisruptionBudgetSpec getPodDisruptionBudget() {
    return podDisruptionBudget;
  }


  public void setPodDisruptionBudget(IoK8sApiPolicyV1beta1PodDisruptionBudgetSpec podDisruptionBudget) {
    this.podDisruptionBudget = podDisruptionBudget;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec podGC(IoArgoprojWorkflowV1alpha1PodGC podGC) {
    
    this.podGC = podGC;
    return this;
  }

   /**
   * Get podGC
   * @return podGC
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojWorkflowV1alpha1PodGC getPodGC() {
    return podGC;
  }


  public void setPodGC(IoArgoprojWorkflowV1alpha1PodGC podGC) {
    this.podGC = podGC;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec podPriority(Integer podPriority) {
    
    this.podPriority = podPriority;
    return this;
  }

   /**
   * Priority to apply to workflow pods.
   * @return podPriority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Priority to apply to workflow pods.")

  public Integer getPodPriority() {
    return podPriority;
  }


  public void setPodPriority(Integer podPriority) {
    this.podPriority = podPriority;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec podPriorityClassName(String podPriorityClassName) {
    
    this.podPriorityClassName = podPriorityClassName;
    return this;
  }

   /**
   * PriorityClassName to apply to workflow pods.
   * @return podPriorityClassName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PriorityClassName to apply to workflow pods.")

  public String getPodPriorityClassName() {
    return podPriorityClassName;
  }


  public void setPodPriorityClassName(String podPriorityClassName) {
    this.podPriorityClassName = podPriorityClassName;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec podSpecPatch(String podSpecPatch) {
    
    this.podSpecPatch = podSpecPatch;
    return this;
  }

   /**
   * PodSpecPatch holds strategic merge patch to apply against the pod spec. Allows parameterization of container fields which are not strings (e.g. resource limits).
   * @return podSpecPatch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PodSpecPatch holds strategic merge patch to apply against the pod spec. Allows parameterization of container fields which are not strings (e.g. resource limits).")

  public String getPodSpecPatch() {
    return podSpecPatch;
  }


  public void setPodSpecPatch(String podSpecPatch) {
    this.podSpecPatch = podSpecPatch;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec priority(Integer priority) {
    
    this.priority = priority;
    return this;
  }

   /**
   * Priority is used if controller is configured to process limited number of workflows in parallel. Workflows with higher priority are processed first.
   * @return priority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Priority is used if controller is configured to process limited number of workflows in parallel. Workflows with higher priority are processed first.")

  public Integer getPriority() {
    return priority;
  }


  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec schedulerName(String schedulerName) {
    
    this.schedulerName = schedulerName;
    return this;
  }

   /**
   * Set scheduler name for all pods. Will be overridden if container/script template&#39;s scheduler name is set. Default scheduler will be used if neither specified.
   * @return schedulerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set scheduler name for all pods. Will be overridden if container/script template's scheduler name is set. Default scheduler will be used if neither specified.")

  public String getSchedulerName() {
    return schedulerName;
  }


  public void setSchedulerName(String schedulerName) {
    this.schedulerName = schedulerName;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec securityContext(IoK8sApiCoreV1PodSecurityContext securityContext) {
    
    this.securityContext = securityContext;
    return this;
  }

   /**
   * Get securityContext
   * @return securityContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoK8sApiCoreV1PodSecurityContext getSecurityContext() {
    return securityContext;
  }


  public void setSecurityContext(IoK8sApiCoreV1PodSecurityContext securityContext) {
    this.securityContext = securityContext;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec serviceAccountName(String serviceAccountName) {
    
    this.serviceAccountName = serviceAccountName;
    return this;
  }

   /**
   * ServiceAccountName is the name of the ServiceAccount to run all pods of the workflow as.
   * @return serviceAccountName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ServiceAccountName is the name of the ServiceAccount to run all pods of the workflow as.")

  public String getServiceAccountName() {
    return serviceAccountName;
  }


  public void setServiceAccountName(String serviceAccountName) {
    this.serviceAccountName = serviceAccountName;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec shutdown(String shutdown) {
    
    this.shutdown = shutdown;
    return this;
  }

   /**
   * Shutdown will shutdown the workflow according to its ShutdownStrategy
   * @return shutdown
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shutdown will shutdown the workflow according to its ShutdownStrategy")

  public String getShutdown() {
    return shutdown;
  }


  public void setShutdown(String shutdown) {
    this.shutdown = shutdown;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec suspend(Boolean suspend) {
    
    this.suspend = suspend;
    return this;
  }

   /**
   * Suspend will suspend the workflow and prevent execution of any future steps in the workflow
   * @return suspend
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Suspend will suspend the workflow and prevent execution of any future steps in the workflow")

  public Boolean getSuspend() {
    return suspend;
  }


  public void setSuspend(Boolean suspend) {
    this.suspend = suspend;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec synchronization(IoArgoprojWorkflowV1alpha1Synchronization synchronization) {
    
    this.synchronization = synchronization;
    return this;
  }

   /**
   * Get synchronization
   * @return synchronization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojWorkflowV1alpha1Synchronization getSynchronization() {
    return synchronization;
  }


  public void setSynchronization(IoArgoprojWorkflowV1alpha1Synchronization synchronization) {
    this.synchronization = synchronization;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec templates(List<IoArgoprojWorkflowV1alpha1Template> templates) {
    
    this.templates = templates;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowSpec addTemplatesItem(IoArgoprojWorkflowV1alpha1Template templatesItem) {
    if (this.templates == null) {
      this.templates = new ArrayList<IoArgoprojWorkflowV1alpha1Template>();
    }
    this.templates.add(templatesItem);
    return this;
  }

   /**
   * Templates is a list of workflow templates used in a workflow
   * @return templates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Templates is a list of workflow templates used in a workflow")

  public List<IoArgoprojWorkflowV1alpha1Template> getTemplates() {
    return templates;
  }


  public void setTemplates(List<IoArgoprojWorkflowV1alpha1Template> templates) {
    this.templates = templates;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec tolerations(List<IoK8sApiCoreV1Toleration> tolerations) {
    
    this.tolerations = tolerations;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowSpec addTolerationsItem(IoK8sApiCoreV1Toleration tolerationsItem) {
    if (this.tolerations == null) {
      this.tolerations = new ArrayList<IoK8sApiCoreV1Toleration>();
    }
    this.tolerations.add(tolerationsItem);
    return this;
  }

   /**
   * Tolerations to apply to workflow pods.
   * @return tolerations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tolerations to apply to workflow pods.")

  public List<IoK8sApiCoreV1Toleration> getTolerations() {
    return tolerations;
  }


  public void setTolerations(List<IoK8sApiCoreV1Toleration> tolerations) {
    this.tolerations = tolerations;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec ttlSecondsAfterFinished(Integer ttlSecondsAfterFinished) {
    
    this.ttlSecondsAfterFinished = ttlSecondsAfterFinished;
    return this;
  }

   /**
   * TTLSecondsAfterFinished limits the lifetime of a Workflow that has finished execution (Succeeded, Failed, Error). If this field is set, once the Workflow finishes, it will be deleted after ttlSecondsAfterFinished expires. If this field is unset, ttlSecondsAfterFinished will not expire. If this field is set to zero, ttlSecondsAfterFinished expires immediately after the Workflow finishes. DEPRECATED: Use TTLStrategy.SecondsAfterCompletion instead.
   * @return ttlSecondsAfterFinished
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TTLSecondsAfterFinished limits the lifetime of a Workflow that has finished execution (Succeeded, Failed, Error). If this field is set, once the Workflow finishes, it will be deleted after ttlSecondsAfterFinished expires. If this field is unset, ttlSecondsAfterFinished will not expire. If this field is set to zero, ttlSecondsAfterFinished expires immediately after the Workflow finishes. DEPRECATED: Use TTLStrategy.SecondsAfterCompletion instead.")

  public Integer getTtlSecondsAfterFinished() {
    return ttlSecondsAfterFinished;
  }


  public void setTtlSecondsAfterFinished(Integer ttlSecondsAfterFinished) {
    this.ttlSecondsAfterFinished = ttlSecondsAfterFinished;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec ttlStrategy(IoArgoprojWorkflowV1alpha1TTLStrategy ttlStrategy) {
    
    this.ttlStrategy = ttlStrategy;
    return this;
  }

   /**
   * Get ttlStrategy
   * @return ttlStrategy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojWorkflowV1alpha1TTLStrategy getTtlStrategy() {
    return ttlStrategy;
  }


  public void setTtlStrategy(IoArgoprojWorkflowV1alpha1TTLStrategy ttlStrategy) {
    this.ttlStrategy = ttlStrategy;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec volumeClaimTemplates(List<IoK8sApiCoreV1PersistentVolumeClaim> volumeClaimTemplates) {
    
    this.volumeClaimTemplates = volumeClaimTemplates;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowSpec addVolumeClaimTemplatesItem(IoK8sApiCoreV1PersistentVolumeClaim volumeClaimTemplatesItem) {
    if (this.volumeClaimTemplates == null) {
      this.volumeClaimTemplates = new ArrayList<IoK8sApiCoreV1PersistentVolumeClaim>();
    }
    this.volumeClaimTemplates.add(volumeClaimTemplatesItem);
    return this;
  }

   /**
   * VolumeClaimTemplates is a list of claims that containers are allowed to reference. The Workflow controller will create the claims at the beginning of the workflow and delete the claims upon completion of the workflow
   * @return volumeClaimTemplates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "VolumeClaimTemplates is a list of claims that containers are allowed to reference. The Workflow controller will create the claims at the beginning of the workflow and delete the claims upon completion of the workflow")

  public List<IoK8sApiCoreV1PersistentVolumeClaim> getVolumeClaimTemplates() {
    return volumeClaimTemplates;
  }


  public void setVolumeClaimTemplates(List<IoK8sApiCoreV1PersistentVolumeClaim> volumeClaimTemplates) {
    this.volumeClaimTemplates = volumeClaimTemplates;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec volumes(List<IoK8sApiCoreV1Volume> volumes) {
    
    this.volumes = volumes;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowSpec addVolumesItem(IoK8sApiCoreV1Volume volumesItem) {
    if (this.volumes == null) {
      this.volumes = new ArrayList<IoK8sApiCoreV1Volume>();
    }
    this.volumes.add(volumesItem);
    return this;
  }

   /**
   * Volumes is a list of volumes that can be mounted by containers in a io.argoproj.workflow.v1alpha1.
   * @return volumes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Volumes is a list of volumes that can be mounted by containers in a io.argoproj.workflow.v1alpha1.")

  public List<IoK8sApiCoreV1Volume> getVolumes() {
    return volumes;
  }


  public void setVolumes(List<IoK8sApiCoreV1Volume> volumes) {
    this.volumes = volumes;
  }


  public IoArgoprojWorkflowV1alpha1WorkflowSpec workflowTemplateRef(IoArgoprojWorkflowV1alpha1WorkflowTemplateRef workflowTemplateRef) {
    
    this.workflowTemplateRef = workflowTemplateRef;
    return this;
  }

   /**
   * Get workflowTemplateRef
   * @return workflowTemplateRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojWorkflowV1alpha1WorkflowTemplateRef getWorkflowTemplateRef() {
    return workflowTemplateRef;
  }


  public void setWorkflowTemplateRef(IoArgoprojWorkflowV1alpha1WorkflowTemplateRef workflowTemplateRef) {
    this.workflowTemplateRef = workflowTemplateRef;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1WorkflowSpec ioArgoprojWorkflowV1alpha1WorkflowSpec = (IoArgoprojWorkflowV1alpha1WorkflowSpec) o;
    return Objects.equals(this.activeDeadlineSeconds, ioArgoprojWorkflowV1alpha1WorkflowSpec.activeDeadlineSeconds) &&
        Objects.equals(this.affinity, ioArgoprojWorkflowV1alpha1WorkflowSpec.affinity) &&
        Objects.equals(this.arguments, ioArgoprojWorkflowV1alpha1WorkflowSpec.arguments) &&
        Objects.equals(this.artifactRepositoryRef, ioArgoprojWorkflowV1alpha1WorkflowSpec.artifactRepositoryRef) &&
        Objects.equals(this.automountServiceAccountToken, ioArgoprojWorkflowV1alpha1WorkflowSpec.automountServiceAccountToken) &&
        Objects.equals(this.dnsConfig, ioArgoprojWorkflowV1alpha1WorkflowSpec.dnsConfig) &&
        Objects.equals(this.dnsPolicy, ioArgoprojWorkflowV1alpha1WorkflowSpec.dnsPolicy) &&
        Objects.equals(this.entrypoint, ioArgoprojWorkflowV1alpha1WorkflowSpec.entrypoint) &&
        Objects.equals(this.executor, ioArgoprojWorkflowV1alpha1WorkflowSpec.executor) &&
        Objects.equals(this.hostAliases, ioArgoprojWorkflowV1alpha1WorkflowSpec.hostAliases) &&
        Objects.equals(this.hostNetwork, ioArgoprojWorkflowV1alpha1WorkflowSpec.hostNetwork) &&
        Objects.equals(this.imagePullSecrets, ioArgoprojWorkflowV1alpha1WorkflowSpec.imagePullSecrets) &&
        Objects.equals(this.metrics, ioArgoprojWorkflowV1alpha1WorkflowSpec.metrics) &&
        Objects.equals(this.nodeSelector, ioArgoprojWorkflowV1alpha1WorkflowSpec.nodeSelector) &&
        Objects.equals(this.onExit, ioArgoprojWorkflowV1alpha1WorkflowSpec.onExit) &&
        Objects.equals(this.parallelism, ioArgoprojWorkflowV1alpha1WorkflowSpec.parallelism) &&
        Objects.equals(this.podDisruptionBudget, ioArgoprojWorkflowV1alpha1WorkflowSpec.podDisruptionBudget) &&
        Objects.equals(this.podGC, ioArgoprojWorkflowV1alpha1WorkflowSpec.podGC) &&
        Objects.equals(this.podPriority, ioArgoprojWorkflowV1alpha1WorkflowSpec.podPriority) &&
        Objects.equals(this.podPriorityClassName, ioArgoprojWorkflowV1alpha1WorkflowSpec.podPriorityClassName) &&
        Objects.equals(this.podSpecPatch, ioArgoprojWorkflowV1alpha1WorkflowSpec.podSpecPatch) &&
        Objects.equals(this.priority, ioArgoprojWorkflowV1alpha1WorkflowSpec.priority) &&
        Objects.equals(this.schedulerName, ioArgoprojWorkflowV1alpha1WorkflowSpec.schedulerName) &&
        Objects.equals(this.securityContext, ioArgoprojWorkflowV1alpha1WorkflowSpec.securityContext) &&
        Objects.equals(this.serviceAccountName, ioArgoprojWorkflowV1alpha1WorkflowSpec.serviceAccountName) &&
        Objects.equals(this.shutdown, ioArgoprojWorkflowV1alpha1WorkflowSpec.shutdown) &&
        Objects.equals(this.suspend, ioArgoprojWorkflowV1alpha1WorkflowSpec.suspend) &&
        Objects.equals(this.synchronization, ioArgoprojWorkflowV1alpha1WorkflowSpec.synchronization) &&
        Objects.equals(this.templates, ioArgoprojWorkflowV1alpha1WorkflowSpec.templates) &&
        Objects.equals(this.tolerations, ioArgoprojWorkflowV1alpha1WorkflowSpec.tolerations) &&
        Objects.equals(this.ttlSecondsAfterFinished, ioArgoprojWorkflowV1alpha1WorkflowSpec.ttlSecondsAfterFinished) &&
        Objects.equals(this.ttlStrategy, ioArgoprojWorkflowV1alpha1WorkflowSpec.ttlStrategy) &&
        Objects.equals(this.volumeClaimTemplates, ioArgoprojWorkflowV1alpha1WorkflowSpec.volumeClaimTemplates) &&
        Objects.equals(this.volumes, ioArgoprojWorkflowV1alpha1WorkflowSpec.volumes) &&
        Objects.equals(this.workflowTemplateRef, ioArgoprojWorkflowV1alpha1WorkflowSpec.workflowTemplateRef);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeDeadlineSeconds, affinity, arguments, artifactRepositoryRef, automountServiceAccountToken, dnsConfig, dnsPolicy, entrypoint, executor, hostAliases, hostNetwork, imagePullSecrets, metrics, nodeSelector, onExit, parallelism, podDisruptionBudget, podGC, podPriority, podPriorityClassName, podSpecPatch, priority, schedulerName, securityContext, serviceAccountName, shutdown, suspend, synchronization, templates, tolerations, ttlSecondsAfterFinished, ttlStrategy, volumeClaimTemplates, volumes, workflowTemplateRef);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1WorkflowSpec {\n");
    sb.append("    activeDeadlineSeconds: ").append(toIndentedString(activeDeadlineSeconds)).append("\n");
    sb.append("    affinity: ").append(toIndentedString(affinity)).append("\n");
    sb.append("    arguments: ").append(toIndentedString(arguments)).append("\n");
    sb.append("    artifactRepositoryRef: ").append(toIndentedString(artifactRepositoryRef)).append("\n");
    sb.append("    automountServiceAccountToken: ").append(toIndentedString(automountServiceAccountToken)).append("\n");
    sb.append("    dnsConfig: ").append(toIndentedString(dnsConfig)).append("\n");
    sb.append("    dnsPolicy: ").append(toIndentedString(dnsPolicy)).append("\n");
    sb.append("    entrypoint: ").append(toIndentedString(entrypoint)).append("\n");
    sb.append("    executor: ").append(toIndentedString(executor)).append("\n");
    sb.append("    hostAliases: ").append(toIndentedString(hostAliases)).append("\n");
    sb.append("    hostNetwork: ").append(toIndentedString(hostNetwork)).append("\n");
    sb.append("    imagePullSecrets: ").append(toIndentedString(imagePullSecrets)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    nodeSelector: ").append(toIndentedString(nodeSelector)).append("\n");
    sb.append("    onExit: ").append(toIndentedString(onExit)).append("\n");
    sb.append("    parallelism: ").append(toIndentedString(parallelism)).append("\n");
    sb.append("    podDisruptionBudget: ").append(toIndentedString(podDisruptionBudget)).append("\n");
    sb.append("    podGC: ").append(toIndentedString(podGC)).append("\n");
    sb.append("    podPriority: ").append(toIndentedString(podPriority)).append("\n");
    sb.append("    podPriorityClassName: ").append(toIndentedString(podPriorityClassName)).append("\n");
    sb.append("    podSpecPatch: ").append(toIndentedString(podSpecPatch)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    schedulerName: ").append(toIndentedString(schedulerName)).append("\n");
    sb.append("    securityContext: ").append(toIndentedString(securityContext)).append("\n");
    sb.append("    serviceAccountName: ").append(toIndentedString(serviceAccountName)).append("\n");
    sb.append("    shutdown: ").append(toIndentedString(shutdown)).append("\n");
    sb.append("    suspend: ").append(toIndentedString(suspend)).append("\n");
    sb.append("    synchronization: ").append(toIndentedString(synchronization)).append("\n");
    sb.append("    templates: ").append(toIndentedString(templates)).append("\n");
    sb.append("    tolerations: ").append(toIndentedString(tolerations)).append("\n");
    sb.append("    ttlSecondsAfterFinished: ").append(toIndentedString(ttlSecondsAfterFinished)).append("\n");
    sb.append("    ttlStrategy: ").append(toIndentedString(ttlStrategy)).append("\n");
    sb.append("    volumeClaimTemplates: ").append(toIndentedString(volumeClaimTemplates)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("    workflowTemplateRef: ").append(toIndentedString(workflowTemplateRef)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

