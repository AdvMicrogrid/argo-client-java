/*
 * Argo
 * Argo
 *
 * The version of the OpenAPI document: v2.10.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Artifact;
import org.openapitools.client.model.IoArgoprojWorkflowV1alpha1Parameter;

/**
 * Inputs are the mechanism for passing parameters, artifacts, volumes from one template to another
 */
@ApiModel(description = "Inputs are the mechanism for passing parameters, artifacts, volumes from one template to another")

public class IoArgoprojWorkflowV1alpha1Inputs {
  public static final String SERIALIZED_NAME_ARTIFACTS = "artifacts";
  @SerializedName(SERIALIZED_NAME_ARTIFACTS)
  private List<IoArgoprojWorkflowV1alpha1Artifact> artifacts = null;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List<IoArgoprojWorkflowV1alpha1Parameter> parameters = null;


  public IoArgoprojWorkflowV1alpha1Inputs artifacts(List<IoArgoprojWorkflowV1alpha1Artifact> artifacts) {
    
    this.artifacts = artifacts;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1Inputs addArtifactsItem(IoArgoprojWorkflowV1alpha1Artifact artifactsItem) {
    if (this.artifacts == null) {
      this.artifacts = new ArrayList<IoArgoprojWorkflowV1alpha1Artifact>();
    }
    this.artifacts.add(artifactsItem);
    return this;
  }

   /**
   * Artifact are a list of artifacts passed as inputs
   * @return artifacts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Artifact are a list of artifacts passed as inputs")

  public List<IoArgoprojWorkflowV1alpha1Artifact> getArtifacts() {
    return artifacts;
  }


  public void setArtifacts(List<IoArgoprojWorkflowV1alpha1Artifact> artifacts) {
    this.artifacts = artifacts;
  }


  public IoArgoprojWorkflowV1alpha1Inputs parameters(List<IoArgoprojWorkflowV1alpha1Parameter> parameters) {
    
    this.parameters = parameters;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1Inputs addParametersItem(IoArgoprojWorkflowV1alpha1Parameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<IoArgoprojWorkflowV1alpha1Parameter>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * Parameters are a list of parameters passed as inputs
   * @return parameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Parameters are a list of parameters passed as inputs")

  public List<IoArgoprojWorkflowV1alpha1Parameter> getParameters() {
    return parameters;
  }


  public void setParameters(List<IoArgoprojWorkflowV1alpha1Parameter> parameters) {
    this.parameters = parameters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1Inputs ioArgoprojWorkflowV1alpha1Inputs = (IoArgoprojWorkflowV1alpha1Inputs) o;
    return Objects.equals(this.artifacts, ioArgoprojWorkflowV1alpha1Inputs.artifacts) &&
        Objects.equals(this.parameters, ioArgoprojWorkflowV1alpha1Inputs.parameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(artifacts, parameters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1Inputs {\n");
    sb.append("    artifacts: ").append(toIndentedString(artifacts)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

