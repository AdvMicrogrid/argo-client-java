/*
 * Argo Server API
 * You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.workflow.models.IoArgoprojEventsV1alpha1WebhookContext;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * IoArgoprojEventsV1alpha1GithubEventSource
 */

public class IoArgoprojEventsV1alpha1GithubEventSource {
  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_API_TOKEN = "apiToken";
  @SerializedName(SERIALIZED_NAME_API_TOKEN)
  private io.kubernetes.client.openapi.models.V1SecretKeySelector apiToken;

  public static final String SERIALIZED_NAME_CONTENT_TYPE = "contentType";
  @SerializedName(SERIALIZED_NAME_CONTENT_TYPE)
  private String contentType;

  public static final String SERIALIZED_NAME_DELETE_HOOK_ON_FINISH = "deleteHookOnFinish";
  @SerializedName(SERIALIZED_NAME_DELETE_HOOK_ON_FINISH)
  private Boolean deleteHookOnFinish;

  public static final String SERIALIZED_NAME_EVENTS = "events";
  @SerializedName(SERIALIZED_NAME_EVENTS)
  private List<String> events = null;

  public static final String SERIALIZED_NAME_GITHUB_BASE_U_R_L = "githubBaseURL";
  @SerializedName(SERIALIZED_NAME_GITHUB_BASE_U_R_L)
  private String githubBaseURL;

  public static final String SERIALIZED_NAME_GITHUB_UPLOAD_U_R_L = "githubUploadURL";
  @SerializedName(SERIALIZED_NAME_GITHUB_UPLOAD_U_R_L)
  private String githubUploadURL;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INSECURE = "insecure";
  @SerializedName(SERIALIZED_NAME_INSECURE)
  private Boolean insecure;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Map<String, String> metadata = null;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private String owner;

  public static final String SERIALIZED_NAME_REPOSITORY = "repository";
  @SerializedName(SERIALIZED_NAME_REPOSITORY)
  private String repository;

  public static final String SERIALIZED_NAME_WEBHOOK = "webhook";
  @SerializedName(SERIALIZED_NAME_WEBHOOK)
  private IoArgoprojEventsV1alpha1WebhookContext webhook;

  public static final String SERIALIZED_NAME_WEBHOOK_SECRET = "webhookSecret";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_SECRET)
  private io.kubernetes.client.openapi.models.V1SecretKeySelector webhookSecret;


  public IoArgoprojEventsV1alpha1GithubEventSource active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    this.active = active;
  }


  public IoArgoprojEventsV1alpha1GithubEventSource apiToken(io.kubernetes.client.openapi.models.V1SecretKeySelector apiToken) {
    
    this.apiToken = apiToken;
    return this;
  }

   /**
   * Get apiToken
   * @return apiToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public io.kubernetes.client.openapi.models.V1SecretKeySelector getApiToken() {
    return apiToken;
  }


  public void setApiToken(io.kubernetes.client.openapi.models.V1SecretKeySelector apiToken) {
    this.apiToken = apiToken;
  }


  public IoArgoprojEventsV1alpha1GithubEventSource contentType(String contentType) {
    
    this.contentType = contentType;
    return this;
  }

   /**
   * Get contentType
   * @return contentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContentType() {
    return contentType;
  }


  public void setContentType(String contentType) {
    this.contentType = contentType;
  }


  public IoArgoprojEventsV1alpha1GithubEventSource deleteHookOnFinish(Boolean deleteHookOnFinish) {
    
    this.deleteHookOnFinish = deleteHookOnFinish;
    return this;
  }

   /**
   * Get deleteHookOnFinish
   * @return deleteHookOnFinish
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDeleteHookOnFinish() {
    return deleteHookOnFinish;
  }


  public void setDeleteHookOnFinish(Boolean deleteHookOnFinish) {
    this.deleteHookOnFinish = deleteHookOnFinish;
  }


  public IoArgoprojEventsV1alpha1GithubEventSource events(List<String> events) {
    
    this.events = events;
    return this;
  }

  public IoArgoprojEventsV1alpha1GithubEventSource addEventsItem(String eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<String>();
    }
    this.events.add(eventsItem);
    return this;
  }

   /**
   * Get events
   * @return events
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getEvents() {
    return events;
  }


  public void setEvents(List<String> events) {
    this.events = events;
  }


  public IoArgoprojEventsV1alpha1GithubEventSource githubBaseURL(String githubBaseURL) {
    
    this.githubBaseURL = githubBaseURL;
    return this;
  }

   /**
   * Get githubBaseURL
   * @return githubBaseURL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGithubBaseURL() {
    return githubBaseURL;
  }


  public void setGithubBaseURL(String githubBaseURL) {
    this.githubBaseURL = githubBaseURL;
  }


  public IoArgoprojEventsV1alpha1GithubEventSource githubUploadURL(String githubUploadURL) {
    
    this.githubUploadURL = githubUploadURL;
    return this;
  }

   /**
   * Get githubUploadURL
   * @return githubUploadURL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGithubUploadURL() {
    return githubUploadURL;
  }


  public void setGithubUploadURL(String githubUploadURL) {
    this.githubUploadURL = githubUploadURL;
  }


  public IoArgoprojEventsV1alpha1GithubEventSource id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public IoArgoprojEventsV1alpha1GithubEventSource insecure(Boolean insecure) {
    
    this.insecure = insecure;
    return this;
  }

   /**
   * Get insecure
   * @return insecure
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getInsecure() {
    return insecure;
  }


  public void setInsecure(Boolean insecure) {
    this.insecure = insecure;
  }


  public IoArgoprojEventsV1alpha1GithubEventSource metadata(Map<String, String> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public IoArgoprojEventsV1alpha1GithubEventSource putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getMetadata() {
    return metadata;
  }


  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }


  public IoArgoprojEventsV1alpha1GithubEventSource owner(String owner) {
    
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOwner() {
    return owner;
  }


  public void setOwner(String owner) {
    this.owner = owner;
  }


  public IoArgoprojEventsV1alpha1GithubEventSource repository(String repository) {
    
    this.repository = repository;
    return this;
  }

   /**
   * Get repository
   * @return repository
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRepository() {
    return repository;
  }


  public void setRepository(String repository) {
    this.repository = repository;
  }


  public IoArgoprojEventsV1alpha1GithubEventSource webhook(IoArgoprojEventsV1alpha1WebhookContext webhook) {
    
    this.webhook = webhook;
    return this;
  }

   /**
   * Get webhook
   * @return webhook
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojEventsV1alpha1WebhookContext getWebhook() {
    return webhook;
  }


  public void setWebhook(IoArgoprojEventsV1alpha1WebhookContext webhook) {
    this.webhook = webhook;
  }


  public IoArgoprojEventsV1alpha1GithubEventSource webhookSecret(io.kubernetes.client.openapi.models.V1SecretKeySelector webhookSecret) {
    
    this.webhookSecret = webhookSecret;
    return this;
  }

   /**
   * Get webhookSecret
   * @return webhookSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public io.kubernetes.client.openapi.models.V1SecretKeySelector getWebhookSecret() {
    return webhookSecret;
  }


  public void setWebhookSecret(io.kubernetes.client.openapi.models.V1SecretKeySelector webhookSecret) {
    this.webhookSecret = webhookSecret;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojEventsV1alpha1GithubEventSource ioArgoprojEventsV1alpha1GithubEventSource = (IoArgoprojEventsV1alpha1GithubEventSource) o;
    return Objects.equals(this.active, ioArgoprojEventsV1alpha1GithubEventSource.active) &&
        Objects.equals(this.apiToken, ioArgoprojEventsV1alpha1GithubEventSource.apiToken) &&
        Objects.equals(this.contentType, ioArgoprojEventsV1alpha1GithubEventSource.contentType) &&
        Objects.equals(this.deleteHookOnFinish, ioArgoprojEventsV1alpha1GithubEventSource.deleteHookOnFinish) &&
        Objects.equals(this.events, ioArgoprojEventsV1alpha1GithubEventSource.events) &&
        Objects.equals(this.githubBaseURL, ioArgoprojEventsV1alpha1GithubEventSource.githubBaseURL) &&
        Objects.equals(this.githubUploadURL, ioArgoprojEventsV1alpha1GithubEventSource.githubUploadURL) &&
        Objects.equals(this.id, ioArgoprojEventsV1alpha1GithubEventSource.id) &&
        Objects.equals(this.insecure, ioArgoprojEventsV1alpha1GithubEventSource.insecure) &&
        Objects.equals(this.metadata, ioArgoprojEventsV1alpha1GithubEventSource.metadata) &&
        Objects.equals(this.owner, ioArgoprojEventsV1alpha1GithubEventSource.owner) &&
        Objects.equals(this.repository, ioArgoprojEventsV1alpha1GithubEventSource.repository) &&
        Objects.equals(this.webhook, ioArgoprojEventsV1alpha1GithubEventSource.webhook) &&
        Objects.equals(this.webhookSecret, ioArgoprojEventsV1alpha1GithubEventSource.webhookSecret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, apiToken, contentType, deleteHookOnFinish, events, githubBaseURL, githubUploadURL, id, insecure, metadata, owner, repository, webhook, webhookSecret);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojEventsV1alpha1GithubEventSource {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    apiToken: ").append(toIndentedString(apiToken)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    deleteHookOnFinish: ").append(toIndentedString(deleteHookOnFinish)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    githubBaseURL: ").append(toIndentedString(githubBaseURL)).append("\n");
    sb.append("    githubUploadURL: ").append(toIndentedString(githubUploadURL)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    insecure: ").append(toIndentedString(insecure)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    repository: ").append(toIndentedString(repository)).append("\n");
    sb.append("    webhook: ").append(toIndentedString(webhook)).append("\n");
    sb.append("    webhookSecret: ").append(toIndentedString(webhookSecret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

